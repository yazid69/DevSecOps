name: Vercel Preview Deployment

on:
  pull_request:
    branches:
      - '*'

permissions:
  contents: read
  pull-requests: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    outputs:
      preview_url: ${{ steps.extract_url.outputs.url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      
      - name: Deploy Project to Vercel
        id: deploy
        run: |
          echo "Starting deployment..."
          DEPLOYMENT_OUTPUT=$(vercel --token=${{ secrets.VERCEL_TOKEN }} --yes --confirm)
          echo "Deployment output: $DEPLOYMENT_OUTPUT"
          PREVIEW_URL=$(echo "$DEPLOYMENT_OUTPUT" | grep -o 'https://[^ ]*')
          echo "Extracted Preview URL: $PREVIEW_URL"
          if [ -z "$PREVIEW_URL" ]; then
            echo "No preview URL found in deployment output"
            exit 1
          fi
          echo "::set-output name=url::$PREVIEW_URL"
      
      - name: Extract Preview URL
        id: extract_url
        run: echo "Preview URL is ${{ steps.deploy.outputs.url }}"

  comment:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Comment on PR
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const previewUrl = "${{ needs.deploy.outputs.preview_url }}";
            const pr = context.payload.pull_request;
            if (pr) {
              const message = previewUrl ? `üöÄ Preview deployment is ready! [Preview URL](${previewUrl})` : '‚ö†Ô∏è Preview deployment failed.';
              await github.rest.issues.createComment({
                issue_number: pr.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: message
              });
            }
