name: Vercel Preview Deployment and Semgrep Scan

on:
  pull_request:
    branches:
      - '*'

permissions:
  contents: read
  pull-requests: write

jobs:
  semgrep:
    runs-on: ubuntu-latest
    outputs:
      semgrep_output: ${{ steps.semgrep.outputs.semgrep_output }}
      xss_detected: ${{ steps.check_xss_errors.outputs.xss_detected }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Install Semgrep
        run: pip install semgrep

      - name: Run Semgrep scan
        id: semgrep
        run: |
          echo "Starting Semgrep scan..."
          semgrep --config .semgrep.yml --json > semgrep-results.json

      - name: Check for XSS errors
        id: check_xss_errors
        run: |
          if grep -q "Possible XSS vulnerability detected" semgrep-results.json; then
            echo "::set-output name=xss_detected::true"
          else
            echo "::set-output name=xss_detected::false"
          fi
          cat semgrep-results.json

      - name: Upload Semgrep results
        uses: actions/upload-artifact@v2
        with:
          name: semgrep-results
          path: semgrep-results.json

  deploy:
    runs-on: ubuntu-latest
    needs: semgrep
    outputs:
      preview_url: ${{ steps.deploy.outputs.preview_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Deploy Project to Vercel
        id: deploy
        run: |
          set -e
          echo "Starting deployment..."
          DEPLOYMENT_OUTPUT=$(vercel --token=${{ secrets.VERCEL_TOKEN }} --yes --confirm)
          echo "Deployment output: $DEPLOYMENT_OUTPUT"
          PREVIEW_URL=$(echo "$DEPLOYMENT_OUTPUT" | grep -o 'https://[^ ]*' | head -n 1)
          echo "Extracted Preview URL: $PREVIEW_URL"
          if [ -z "$PREVIEW_URL" ]; then
            echo "No preview URL found in deployment output"
            exit 1
          fi
          echo "::set-output name=preview_url::$PREVIEW_URL"
      
      - name: Log Preview URL
        run: echo "Preview URL is ${{ steps.deploy.outputs.preview_url }}"

  comment:
    runs-on: ubuntu-latest
    needs: [semgrep, deploy]
    steps:
      - name: Download Semgrep results
        uses: actions/download-artifact@v2
        with:
          name: semgrep-results

      - name: Comment on PR
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const semgrepResults = JSON.parse(fs.readFileSync('semgrep-results.json', 'utf8'));
            const previewUrl = "${{ needs.deploy.outputs.preview_url }}";
            const pr = context.payload.pull_request;

            let message = '';

            if (semgrepResults.results.length > 0) {
              message += '## :warning: XSS Vulnerability Detected\n';
              semgrepResults.results.forEach(result => {
                if (result.extra.message.includes("Possible XSS vulnerability detected")) {
                  message += `- File: ${result.path}\n  Line: ${result.start.line}\n  Message: ${result.extra.message}\n\n`;
                }
              });
            } else {
              message += '✅ Semgrep found no issues.\n\n';
            }

            message += previewUrl ? `🚀 Preview deployment is ready! Here is the URL: ${previewUrl}` : '⚠️ Preview deployment failed.';

            if (pr) {
              await github.rest.issues.createComment({
                issue_number: pr.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: message
              });
            }
